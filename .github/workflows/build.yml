name: Build Game Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for this release'
        required: true
        default: '1.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build Windows executable
        run: |
          pyinstaller --onefile --windowed --name DooMP-${{ github.event.inputs.version || '1.0' }}-win64 main.py
          
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: DooMP-Windows
          path: dist/DooMP-${{ github.event.inputs.version || '1.0' }}-win64.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Build macOS app
        run: |
          pyinstaller --windowed --name DooMP-${{ github.event.inputs.version || '1.0' }}-macos main.py
          
      - name: Create DMG
        run: |
          pip install dmgbuild
          dmgbuild -s dmg_settings.py "DooMP" dist/DooMP-${{ github.event.inputs.version || '1.0' }}-macos.dmg || true
        continue-on-error: true
          
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: DooMP-macOS
          path: |
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-macos.app
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-macos.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          sudo apt-get update
          sudo apt-get install -y python3-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
          
      - name: Build Linux executable
        run: |
          pyinstaller --onefile --name DooMP-${{ github.event.inputs.version || '1.0' }}-linux main.py
          
      - name: Create Linux desktop file
        run: |
          echo "[Desktop Entry]
          Type=Application
          Name=DooMP
          Exec=./DooMP-${{ github.event.inputs.version || '1.0' }}-linux
          Icon=
          Comment=A Raycasting 3D Game
          Categories=Game;" > dist/DooMP.desktop
          chmod +x dist/DooMP-${{ github.event.inputs.version || '1.0' }}-linux
          chmod +x dist/DooMP.desktop
          cd dist && tar -czf DooMP-${{ github.event.inputs.version || '1.0' }}-linux.tar.gz DooMP-${{ github.event.inputs.version || '1.0' }}-linux DooMP.desktop
          
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: DooMP-Linux
          path: |
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-linux
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-linux.tar.gz

  create-package:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create distribution directory
        run: mkdir -p dist
        
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: DooMP-Windows
          path: dist
          
      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: DooMP-macOS
          path: dist
          
      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: DooMP-Linux
          path: dist
          
      - name: Create unified ZIP archive
        run: |
          cd dist && zip -r DooMP-${{ github.event.inputs.version || '1.0' }}-all-platforms.zip .
          
      - name: Upload combined artifact
        uses: actions/upload-artifact@v3
        with:
          name: DooMP-All-Platforms
          path: dist/DooMP-${{ github.event.inputs.version || '1.0' }}-all-platforms.zip
          
      - name: Create release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          name: DooMP v${{ github.event.inputs.version || '1.0' }}
          tag_name: v${{ github.event.inputs.version || '1.0' }}
          files: |
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-win64.exe
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-macos.dmg
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-linux.tar.gz
            dist/DooMP-${{ github.event.inputs.version || '1.0' }}-all-platforms.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}